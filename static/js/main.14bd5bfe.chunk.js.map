{"version":3,"sources":["logo.svg","Utils/Events.js","Utils/mapRange.js","Components/Input.js","Components/Output.js","App.js","reportWebVitals.js","index.js"],"names":["on","eventType","handler","document","addEventListener","off","removeEventListener","mapRange","num","min_old","max_old","min_new","max_new","math","require","Input","props","inputRef","useRef","containerRef","useState","xmin","xmax","ymin","ymax","range","setRange","parser","x","y","position","setPosition","setFunction","getPos","data","w","current","getBoundingClientRect","width","h","height","winput","hinput","xini","yini","evaluate","point","dfx","dfy","eps","mag","sqrt","error","console","log","isNumeric","isNaN","className","onInput","e","Number","target","value","type","placeholder","ref","bounds","onDrag","output","event","CustomEvent","detail","dispatchEvent","trigger","toFixed","Output","outputRef","pixelPos","setPixelPos","setPostion","onInputChange","cw","ch","ow","oh","convert","useEffect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.14bd5bfe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/**\r\n * Adds a handler to a particular event\r\n * @param {string}} eventType Designates the type of event to handle\r\n * @param {function} handler Designates the handler function to handle that event\r\n */\r\n\r\n function on(eventType, handler) {\r\n    document.addEventListener(eventType, handler);\r\n}\r\n\r\n/**\r\n * Removes handler from event\r\n * @param {string} eventType Designates the type of event to handle\r\n * @param {function} handler The handler to that event\r\n */\r\nfunction off(eventType, handler) {\r\n    document.removeEventListener(eventType, handler);\r\n}\r\n\r\n/**\r\n * Adds handler that handles the event once then unsubs\r\n * @param {string} eventType Designates the type of event to handle\r\n * @param {function} handler The handler to that event\r\n */\r\nfunction once(eventType, handler) {\r\n    on(eventType, handleOnce);\r\n    function handleOnce(event) {\r\n        handler(event);\r\n        off(eventType, handleOnce);\r\n    }\r\n}\r\n\r\n/**\r\n * triggers event in the document scope\r\n * @param {string} eventType The type of event to fire\r\n * @param {any} data Any data that you want the handler to process from the source.\r\n */\r\nfunction trigger(eventType, data) {\r\n    const event = new CustomEvent(eventType, {detail:data});\r\n    document.dispatchEvent(event);\r\n}\r\n\r\nasync function triggerAsync(eventType, data) {\r\n    const event = new CustomEvent(eventType, {detail:data});\r\n    document.dispatchEvent(event);\r\n}\r\n\r\nexport {on, once, off, trigger, triggerAsync}","const mapRange = (num, min_old, max_old, min_new, max_new) => {\r\n    return (num - min_old) * (max_new - min_new) / (max_old - min_old) + min_new;\r\n}\r\n\r\nexport default mapRange;","import { isNumeric } from \"mathjs\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Draggable from \"react-draggable\"\r\nimport \"../Styles/Input.css\"\r\nimport { on, trigger } from \"../Utils/Events\";\r\nimport mapRange from \"../Utils/mapRange\";\r\nconst math = require('mathjs');\r\n\r\nfunction Input(props) {\r\n\r\n    const inputRef = useRef(null);\r\n    const containerRef = useRef(null);\r\n    const [range, setRange] = useState({ xmin: -1.0, xmax: 1.0, ymin: -1.0, ymax: 1.0 });\r\n    const [parser, setParser] = useState(math.parser());\r\n    const [position, setPosition] = useState({ x: 0, y: 0 })\r\n    const [func, setFunction] = useState(\"x\");\r\n\r\n    const onDrag = (e, data) => {\r\n        setPosition(getPos(data));\r\n        const output = evaluate(getPos(data));\r\n        console.log(output)\r\n        trigger('input:evaluate', output);\r\n    }\r\n\r\n    const getPos = (data) => {\r\n        const w = containerRef.current.getBoundingClientRect().width;\r\n        const h = containerRef.current.getBoundingClientRect().height;\r\n        const winput = inputRef.current.getBoundingClientRect().width;\r\n        const hinput = inputRef.current.getBoundingClientRect().height;\r\n\r\n        const xini = data.x + winput / 2.0;\r\n        const yini = data.y + hinput / 2.0;\r\n        const xnorm = mapRange(xini, winput / 2, w - winput / 2, range.xmin, range.xmax);\r\n        const ynorm = mapRange(yini, hinput / 2, h - hinput / 2, range.ymax, range.ymin);\r\n        return { x: xnorm, y: ynorm };\r\n    }\r\n\r\n    const evaluate = (point) => {\r\n        let x = 0;\r\n        let y = 0;\r\n        let dfx = 0;\r\n        let dfy = 0;\r\n        const eps = 0.001;\r\n        try {\r\n            x = parser.evaluate(`f(${point.x},${point.y})`);\r\n            \r\n            dfx = parser.evaluate(`f(${point.x},${point.y})`) - parser.evaluate(`f(${point.x + eps},${point.y})`);\r\n            dfx /= -eps;\r\n            dfy = parser.evaluate(`f(${point.x},${point.y})`) - parser.evaluate(`f(${point.x},${point.y + eps})`);\r\n            dfy /= -eps;\r\n\r\n            const mag = math.sqrt(dfx*dfx + dfy*dfy);\r\n            dfx /= mag;\r\n            dfy /= mag;\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        if (!isNumeric(x) || isNaN(x)) {\r\n            x = 0;\r\n            y = 10;\r\n        }\r\n        return { x: y, y: x, dfx:dfx, dfy:dfy};\r\n    }\r\n\r\n    const onInput = (e) => {\r\n        try {\r\n            parser.evaluate('f(x, y) = ' + e.target.value);\r\n            setFunction(e.target.value);\r\n        } catch (error) {\r\n            parser.evaluate('f(x, y) = 0');\r\n            setFunction('0')\r\n            console.log(\"invalid input\")\r\n        }\r\n    }\r\n\r\n    const onXmin = (e) => {\r\n        setRange({ xmin: Number(e.target.value), xmax: range.xmax, ymin: range.ymin, ymax: range.ymax });\r\n    }\r\n    const onXmax = (e) => {\r\n        setRange({ xmin: range.xmin, xmax: Number(e.target.value), ymin: range.ymin, ymax: range.ymax });\r\n    }\r\n    const onYmin = (e) => {\r\n        setRange({ xmin: range.xmin, xmax: range.xmax, ymin: Number(e.target.value), ymax: range.ymax });\r\n    }\r\n    const onYmax = (e) => {\r\n        setRange({ xmin: range.xmin, xmax: range.xmax, ymin: range.ymin, ymax: Number(e.target.value) });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <input className=\"input-bounds\" onInput={onYmax} type=\"number\" placeholder={1}></input>\r\n                <div className=\"flex-row\">\r\n                    <input className=\"input-bounds\" onInput={onXmin} type=\"number\" placeholder={-1}></input>\r\n                    <div ref={containerRef} className=\"input-container\">\r\n                        <Draggable bounds=\"parent\" onDrag={onDrag}>\r\n                            <div ref={inputRef} className=\"input-draggable\">\r\n                                <div className=\"position-label\">({position.x.toFixed(2)}, {position.y.toFixed(2)})</div>\r\n                            </div>\r\n                        </Draggable>\r\n                    </div>\r\n                    <input className=\"input-bounds\" onInput={onXmax} type=\"number\" placeholder={1}></input>\r\n                </div>\r\n                <input className=\"input-bounds\" onInput={onYmin} type=\"number\" placeholder={-1}></input>\r\n\r\n            </div>\r\n            <div className=\"function\">\r\n                <label>f(x, y) =</label>\r\n                <input onInput={onInput} type=\"text\"></input>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input;","import { useEffect, useState } from \"react\"\r\nimport Draggable from \"react-draggable\"\r\nimport \"../Styles/Output.css\"\r\nimport { off, on } from \"../Utils/Events\"\r\nimport { useRef } from \"react\"\r\nimport mapRange from \"../Utils/mapRange\";\r\n\r\nfunction Output(props) {\r\n\r\n    const outputRef = useRef(null);\r\n    const containerRef = useRef(null);\r\n    const [range, setRange] = useState({ xmin: -1.0, xmax: 1.0, ymin: -1.0, ymax: 1.0 });\r\n    const [pixelPos, setPixelPos] = useState({ x: 10, y: 10 });\r\n    const [position, setPostion] = useState({ x: 0, y: 0 });\r\n\r\n    const convert = (data) => {\r\n        const cw = containerRef.current.getBoundingClientRect().width;\r\n        const ch = containerRef.current.getBoundingClientRect().height;\r\n        const ow = outputRef.current.getBoundingClientRect().width;\r\n        const oh = outputRef.current.getBoundingClientRect().height;\r\n\r\n        const xini = mapRange(data.x, range.xmin, range.xmax, ow / 2, cw - ow / 2);\r\n        const yini = mapRange(data.y, range.ymax, range.ymin, oh / 2, ch - oh / 2);\r\n        const x = xini - ow / 2;\r\n        const y = yini - oh / 2;\r\n        return { x: x, y: y };\r\n    }\r\n\r\n    const onInputChange = (e) => {\r\n        setPixelPos(convert(e.detail));\r\n        setPostion(e.detail);\r\n    }\r\n\r\n    useEffect(() => {\r\n        on('input:evaluate', onInputChange);\r\n        return () => off('input:evaluate', onInputChange);\r\n    }, [range])\r\n\r\n    const onXmin = (e) => {\r\n        setRange({ xmin: Number(e.target.value), xmax: range.xmax, ymin: range.ymin, ymax: range.ymax });\r\n    }\r\n    const onXmax = (e) => {\r\n        setRange({ xmin: range.xmin, xmax: Number(e.target.value), ymin: range.ymin, ymax: range.ymax });\r\n    }\r\n    const onYmin = (e) => {\r\n        setRange({ xmin: range.xmin, xmax: range.xmax, ymin: Number(e.target.value), ymax: range.ymax });\r\n    }\r\n    const onYmax = (e) => {\r\n        setRange({ xmin: range.xmin, xmax: range.xmax, ymin: range.ymin, ymax: Number(e.target.value) });\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex-col\">\r\n            <input className=\"input-bounds\" onInput={onYmax} type=\"number\" placeholder={1}></input>\r\n            <div ref={containerRef} className=\"output-container\">\r\n                <Draggable bounds=\"parent\" position={pixelPos}>\r\n                    <div ref={outputRef} className=\"output-draggable\">\r\n                        <div className=\"position-label\">({position.y.toFixed(2)})</div>\r\n                    </div>\r\n                </Draggable>\r\n            </div>\r\n            <input className=\"input-bounds\" onInput={onYmin} type=\"number\" placeholder={-1}></input>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Output;","import logo from './logo.svg';\nimport './App.css';\nimport Input from './Components/Input';\nimport Output from './Components/Output';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Input></Input>\n        <Output></Output>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}